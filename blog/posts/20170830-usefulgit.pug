//-
    title: "Useful Git"
    date: "2017/08/30"
    tags: [ "reference" ]

extends /resources/layouts/blog/blog
include /resources/layouts/main/util/dropdownlist

mixin sublist( title )
    li
        +dropdown-list-toggle
            code= title
        +dropdown-list-contents
            ul
                block

mixin modifies-history
    .alert.alert-danger
        strong Warning:
        = " "
        | Modifies history!

block post
    p A collection of useful git commands.

    +dropdown-list
        +sublist( "git status" )
            li
                code git status -sb
                = ", "
                code git status --short --branch
                ul
                    li
                        :markdown-it
                            Shows the current branch and its upstream, how many
                            commits ahead or behind the local branch is, and the
                            status of all modified / untracked files.

                            ```
                            $ git status -sb
                            ## master...origin/master [ahead 1, behind 1]
                             M modifed_file.txt
                             D deleted_file.txt
                            ?? untracked_file.txt
                            ```
        +sublist( "git add" )
            li
                code git add -u
                = ", "
                code git add --update
                ul
                    li
                        :markdown-it
                            Stages all tracked files. Untracked files will not
                            be staged.
            li
                code git add -A
                = ", "
                code git add --all
                ul
                    li
                        :markdown-it
                            Stages all files, tracked and untracked.

                            Files that are ignored will not be staged.
            li
                code git add -N
                = ", "
                code git add --intent-to-add
                ul
                    li
                        :markdown-it
                            Stages the file, without staging its contents.

                            ```
                            $ echo test > file
                            $ git add -N file
                            $ git diff --staged
                            diff --git a/file b/file
                            new file mode 100644
                            index 0000000..e69de29
                            $ # Note the diff contains no contents
                            $
                            $ git add file
                            $ git diff --staged
                            diff --git a/file b/file
                            new file mode 100644
                            index 0000000..9daeafb
                            --- /dev/null
                            +++ b/file
                            @@ -0,0 +1 @@
                            +test
                            $ # The diff now contains the contents of file
                            ```
        +sublist( "git commit" )
            li
                code git commit --amend
                ul
                    li
                        :markdown-it
                            Recreates the last commit, opening the editor to
                            modify the commit message.

                            Generally used to modify a typo in the commit
                            message.

                        +modifies-history
            li
                code git commit --amend --no-edit
                ul
                    li
                        :markdown-it
                            Recreates the last commit, using the commit's old
                            commit message. Any files that have been staged will
                            become part of the last commit.

                            Generally used to add files to a commit that were
                            accidentally left out.

                        +modifies-history
        +sublist( "git log" )
            li
                code git log -1 HEAD
                ul
                    li
                        :markdown-it
                            Shows the last commit on whatever branch you're on.
        +sublist( "git diff" )
            li
                code git diff
                ul
                    li
                        :markdown-it
                            Shows all unstaged changes to tracked files.

                        .alert.alert-warning.
                            Does not show changes to untracked files!
            li
                code git diff filename.txt
                ul
                    li
                        :markdown-it
                            Shows unstaged changes to `filename.txt`.
            li
                code git diff --staged
                ul
                    li
                        :markdown-it
                            Shows all staged changes.

                            Unstaged changes are not shown.
